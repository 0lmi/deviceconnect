openapi: 3.0.3

info:
  title: Device Connect
  description: |
    API for managing persistent device connections.
    Intended for use by the web GUI

  version: "1"

  contact:
    name: Mender Support
    email: support@mender.io
    url: https://mender.io/contact-us

  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html

servers:
  - url: https://hosted.mender.io/api/management/v1/deviceconnect

# Global security definitions
security:
  - ManagementJWT: []

tags:
  - name: ManagementAPI

paths:
  /devices/{id}:
    get:
      tags:
        - ManagementAPI
      operationId: Get device
      summary: Fetch the state of a device.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID for the target device.
      responses:
        200:
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceState'
        400:
          $ref: '#/components/responses/InvalidRequestError'
        404:
          description: Device not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: "Device not found"
                request_id: "eed14d55-d996-42cd-8248-e806663810aa"
        500:
          $ref: '#/components/responses/InternalServerError'
  /devices/{id}/check-update:
    post:
      tags:
        - ManagementAPI
      operationId: Check Update
      summary: Trigger check-update for the Mender client running on the device
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID for the target device.
      responses:
        202:
          description: Accepted
        400:
          $ref: '#/components/responses/InvalidRequestError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          description: Device not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        409:
          description: Device not connected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          $ref: '#/components/responses/InternalServerError'

  /devices/{id}/connect:
    get:
      tags:
        - ManagementAPI
      operationId: Connect
      summary: Establish permanent connection with device
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID for the target device.
        - in: header
          name: Connection
          schema:
            type: string
            enum:
              - Upgrade
          description: Standard websocket request header.
        - in: header
          name: Upgrade
          schema:
            type: string
            format: base64
            enum:
              - websocket
          description: Standard websocket request header.
        - in: header
          name: Sec-Websocket-Key
          schema:
            type: string
            format: base64
          description: Standard websocket request header.
        - in: header
          name: Sec-Websocket-Version
          schema:
            type: integer
            enum:
              - 13
          description: Standard websocket request header.
      responses:
        101:
          description: |
            Successful response - change to websocket protocol.
        400:
          $ref: '#/components/responses/InvalidRequestError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          description: Device not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          $ref: '#/components/responses/InternalServerError'

  /devices/{id}/download:
    post:
      tags:
        - ManagementAPI
      operationId: Download
      summary: Download a file from the device
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID for the target device.
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              properties:
                path:
                  type: string
                  description: Path of the file on the target device.          
              required:
                - path
      responses:
        200:
          description: The content of the file will be returned as attachment
          headers:
            X-Men-File-Path:
              schema:
                type: string
              description: The path of the file on the device
            X-Men-File-UID:
              schema:
                type: integer
              description: The numerical UID of the file on the device
            X-Men-File-GID:
              schema:
                type: integer
              description: The numerical GID of the file on the device
            X-Men-File-Mode:
              schema:
                type: string
              description: The octal representation of the mode of the file on the device
            X-Men-File-Size:
              schema:
                type: integer
              description: The size of the file on the device
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        400:
          $ref: '#/components/responses/InvalidRequestError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          description: Device not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        409:
          description: Device not connected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          $ref: '#/components/responses/InternalServerError'

  /devices/{id}/send-inventory:
    post:
      tags:
        - ManagementAPI
      operationId: Send Inventory
      summary: Trigger send-inventory for the Mender client running on the device
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID for the target device.
      responses:
        202:
          description: Accepted
        400:
          $ref: '#/components/responses/InvalidRequestError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          description: Device not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        409:
          description: Device not connected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          $ref: '#/components/responses/InternalServerError'


  /sessions/{session_id}/playback:
    get:
      tags:
        - ManagementAPI
      operationId: Playback
      summary: Establish a connection for playing back a session
      parameters:
        - in: path
          name: session_id
          required: true
          schema:
            type: string
          description: ID for the session to play back.
        - in: query
          name: sleep_ms
          required: false
          schema:
            type: integer
          description: Time in millisconds to sleep between the subsequent playback data writes.
        - in: header
          name: Connection
          schema:
            type: string
            enum:
              - Upgrade
          description: Standard websocket request header.
        - in: header
          name: Upgrade
          schema:
            type: string
            format: base64
            enum:
              - websocket
          description: Standard websocket request header.
        - in: header
          name: Sec-Websocket-Key
          schema:
            type: string
            format: base64
          description: Standard websocket request header.
        - in: header
          name: Sec-Websocket-Version
          schema:
            type: integer
            enum:
              - 13
          description: Standard websocket request header.
      responses:
        101:
          description: |
            Successful response - change to websocket protocol.
        400:
          $ref: '#/components/responses/InvalidRequestError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          description: Session not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          $ref: '#/components/responses/InternalServerError'

  /devices/{id}/upload:
    post:
      tags:
        - ManagementAPI
      operationId: Upload
      summary: Upload a file to the device
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID for the target device.
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FileUpload'
      responses:
        201:
          description: The file was successfully uploaded
        400:
          $ref: '#/components/responses/InvalidRequestError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          description: Device not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        409:
          description: Device not connected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          $ref: '#/components/responses/InternalServerError'

components:
  securitySchemes:
    ManagementJWT:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: |
        JWT token issued by 'POST /api/management/v1/useradm/auth/login'

        The JWT can be alternatively passed as a cookie named "JWT".

  schemas:
    DeviceState:
      type: object
      properties:
        device_id:
          type: string
          format: uuid
          description: Device ID.
        status:
          type: string
          enum:
            - connected
            - disconnected
          description: Device status.

    Error:
      type: object
      properties:
        error:
          type: string
          description: Description of the error.
        request_id:
          type: string
          description:
            Request ID passed with the request X-MEN-RequestID header
            or generated by the server.
      description: Error descriptor.
      example:
        error: "<error description>"
        request_id: "eed14d55-d996-42cd-8248-e806663810a8"

    FileUpload:
      type: object
      properties:
        path:
          type: string
          description: The path of the file on the device
        uid:
          type: integer
          description: The numerical UID of the file on the device
        gid:
          type: integer
          description: The numerical GID of the file on the device
        mode:
          type: string
          description: The octal representation of the mode of the file on the device
        file:
          type: string
          format: binary
      required:
        - path

  responses:
    InternalServerError:
      description: Internal Server Error.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            error: "internal error"
            request_id: "eed14d55-d996-42cd-8248-e806663810a8"

    InvalidRequestError:
      description: Invalid Request.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            error: "bad request parameters"
            request_id: "eed14d55-d996-42cd-8248-e806663810a8"

    ForbiddenError:
      description: |
          The user is not permitted to access the remote terminal
          for a given device.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            error: "Access denied (RBAC)"
            request_id: "eed14d55-d996-42cd-8248-e806663810a8"
