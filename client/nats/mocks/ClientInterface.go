// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import (
	context "context"

	nats "github.com/nats-io/nats.go"
	mock "github.com/stretchr/testify/mock"
)

// ClientInterface is an autogenerated mock type for the ClientInterface type
type ClientInterface struct {
	mock.Mock
}

// Connect provides a mock function with given fields: ctx, uri
func (_m *ClientInterface) Connect(ctx context.Context, uri string) error {
	ret := _m.Called(ctx, uri)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string) error); ok {
		r0 = rf(ctx, uri)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Publish provides a mock function with given fields: subject, data
func (_m *ClientInterface) Publish(subject string, data []byte) error {
	ret := _m.Called(subject, data)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, []byte) error); ok {
		r0 = rf(subject, data)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Subscribe provides a mock function with given fields: subject, callback
func (_m *ClientInterface) Subscribe(subject string, callback nats.MsgHandler) error {
	ret := _m.Called(subject, callback)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, nats.MsgHandler) error); ok {
		r0 = rf(subject, callback)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
